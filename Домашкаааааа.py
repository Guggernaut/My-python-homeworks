def get_list() -> list:
    return list(range(0, 1_000_000, 2))

class Solution:
    def find_target(self, list, target):
        low = 0
        high = len(list) - 1

        while low <= high:
            mid = (low + high) // 2
            guess = list[mid]
            if guess == target:
                return mid
            if guess > target:
                high = mid -1
            else:
                low =mid + 1
        return None



search1 = Solution()
print(search1. find_target(list=get_list(), target=300_000))
with open('binary_search_doc.txt', 'w', encoding = 'UTF-8') as file:
    file.write("1)Binary Search - это алгоритм\n")
    file.write("2)Binary Search - нужен для поиска элемента\n")
    file.write("3)Находится средний элемент. Для этого первый и последний индексы связываются спеременными\
а индекс n среднего элемента вычисляется Значение среднего элемента сравнивается с искомым значением.\
В зависимости от того, n больше оно или меньше значения среднего элемента, дальнейший поиск будет происходить\
только в левой или только в правой n половине. Если значение среднего элемента оказывается равным искомому,\
поиск завершается. Иначе одна из границ n исследуемой последовательности сдвигается. Если искомое значение\
больше значения среднегоэлемента, то нижняя граница n сдвигается за средний элемент на один элемент справа.\
Если искомое значение меньше значения среднего элемента, то верхняя n граница сдвигается на элемент перед\
средним.Снова находится средний элемент теперь уже в выбранной половине.")
